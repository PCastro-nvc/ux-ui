/*! For license information please see lib-molecules-message-input-box-message-input-box-mdx.17ca45d1.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkux_ui=self.webpackChunkux_ui||[]).push([[7751,7811],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./apps/prism/src/lib/molecules/message-input-box/message-input-box.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,Sizes:()=>Sizes,States:()=>States,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_message_input_box_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./apps/prism/src/lib/molecules/message-input-box/message-input-box.component.ts"),_atoms__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./apps/prism/src/lib/atoms/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Molecules/MessageInputBox",component:_message_input_box_component__WEBPACK_IMPORTED_MODULE_1__.r,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_atoms__WEBPACK_IMPORTED_MODULE_2__.hh],imports:[]})],argTypes:{size:{control:{type:"select"},options:["sm","md","lg","xl"]},state:{control:{type:"select"},options:["default","hover","error","focused","disabled"]},messageType:{control:{type:"select"},options:["success","error","warning","info"]},maxlength:{control:{type:"number"},defaultValue:250}}},Primary={args:{size:"md",state:"default",messageType:"info",label:"Add a message",hintText:"Hint text here...",placeholder:"Enter message here...",maxlength:250}},Sizes={tags:["isHidden"],render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 12px;">\n        <prism-message-input-box size="sm" state="default" messageType="info" label="Small" hintText="Hint for small" maxlength="150"></prism-message-input-box>\n        <prism-message-input-box size="md" state="default" messageType="info" label="Regular" hintText="Hint for regular" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="lg" state="default" messageType="info" label="Large" hintText="Hint for large" maxlength="500"></prism-message-input-box>\n        <prism-message-input-box size="xl" state="default" messageType="info" label="XL" hintText="Hint for XL" maxlength="1000"></prism-message-input-box>\n      </div>\n    '})},States={tags:["isHidden"],render:args=>({props:args,template:'\n      <div style="display: flex; flex-direction: column; gap: 12px;">\n        <prism-message-input-box size="md" state="default" messageType="info" label="Default" hintText="Hint for default" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="hover" messageType="info" label="Hover" hintText="Hint for hover" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="error" messageType="error" label="Error" hintText="Hint for error" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="focused" messageType="info" label="Focused" hintText="Hint for focused" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="disabled" messageType="info" label="Disabled" hintText="Hint for disabled" maxlength="250"></prism-message-input-box>\n      </div>\n    '})};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'md',\n    state: 'default',\n    messageType: 'info',\n    label: 'Add a message',\n    hintText: 'Hint text here...',\n    placeholder: 'Enter message here...',\n    maxlength: 250\n  }\n}",...Primary.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 12px;">\n        <prism-message-input-box size="sm" state="default" messageType="info" label="Small" hintText="Hint for small" maxlength="150"></prism-message-input-box>\n        <prism-message-input-box size="md" state="default" messageType="info" label="Regular" hintText="Hint for regular" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="lg" state="default" messageType="info" label="Large" hintText="Hint for large" maxlength="500"></prism-message-input-box>\n        <prism-message-input-box size="xl" state="default" messageType="info" label="XL" hintText="Hint for XL" maxlength="1000"></prism-message-input-box>\n      </div>\n    `\n  })\n}',...Sizes.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n      <div style="display: flex; flex-direction: column; gap: 12px;">\n        <prism-message-input-box size="md" state="default" messageType="info" label="Default" hintText="Hint for default" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="hover" messageType="info" label="Hover" hintText="Hint for hover" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="error" messageType="error" label="Error" hintText="Hint for error" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="focused" messageType="info" label="Focused" hintText="Hint for focused" maxlength="250"></prism-message-input-box>\n        <prism-message-input-box size="md" state="disabled" messageType="info" label="Disabled" hintText="Hint for disabled" maxlength="250"></prism-message-input-box>\n      </div>\n    `\n  })\n}',...States.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Sizes","States"]},"./apps/prism/src/lib/molecules/message-input-box/message-input-box.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),C_git_UX_UI_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_message_input_box_component_stories_ts__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./apps/prism/src/lib/molecules/message-input-box/message-input-box.component.stories.ts");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",ul:"ul",li:"li",strong:"strong"},(0,C_git_UX_UI_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{of:_message_input_box_component_stories_ts__WEBPACK_IMPORTED_MODULE_4__,title:"MessageInputBox Component"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Dx,{children:"MessageInputBox Component"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.QE,{children:"The MessageInputBox component is a flexible and reusable text input area with enhanced features like character count, and accessibility support. It can display messages of different types (success, error, warning, info), making it useful for user forms and input fields requiring feedback."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.dk,{children:"The MessageInputBox component supports different sizes (small, regular, large, XL) and states (default, hover, error, disabled, focused). It is designed to provide a consistent input experience across the application while adhering to accessibility guidelines. It also supports a character counter, a customizable hint text, and automatic updates based on user interaction."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Xz,{of:_message_input_box_component_stories_ts__WEBPACK_IMPORTED_MODULE_4__.Primary}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"properties",children:"Properties"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.ZX,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The MessageInputBox component is primarily used in forms, feedback, or input areas where users need to provide text input. It includes label, placeholder, hint text, and a character counter to guide the user."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"It handles the following states:"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"default"}),": Standard input state."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"hover"}),": Changes style when the user hovers over the input area."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"focused"}),": Activates when the input box is focused."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"disabled"}),": Displays the input as non-interactive."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"error"}),": Shows when the input is in an error state."]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Additionally, it supports message types like ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"success"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"info"}),", ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"warning"}),", and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong,{children:"error"}),", adjusting the state and style accordingly. You can easily configure the maximum number of characters allowed in the input. This component is responsive and adapts to different screen sizes, ensuring usability across devices."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variations",children:"Variations"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.Hw,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.fQ,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"changelog",children:"ChangeLog"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"9/5/2024 Added by GFlorez"})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,C_git_UX_UI_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);