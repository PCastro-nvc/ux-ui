"use strict";(self.webpackChunkux_ui=self.webpackChunkux_ui||[]).push([[3026],{"./apps/prism/src/lib/atoms/field/field.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{InputOnly:()=>InputOnly,Primary:()=>Primary,Sizes:()=>Sizes,States:()=>States,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common_http__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_public_api__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./apps/prism/src/lib/atoms/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Atoms/fields",component:__webpack_require__("./apps/prism/src/lib/atoms/field/field.component.ts").z,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.importProvidersFrom)(_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.JF)]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_public_api__WEBPACK_IMPORTED_MODULE_4__.hh],imports:[_angular_forms__WEBPACK_IMPORTED_MODULE_5__.u5,_angular_forms__WEBPACK_IMPORTED_MODULE_5__.UX]})]},Primary={parameters:{design:{type:"figma",url:"https://www.figma.com/file/OPpX0MblTOfOSQFVJwJjCg/Design-System?node-id=2396-617"}},args:{label:"Label",placeholder:"Input",isDisabled:!1,required:!1,allowRevealPassword:!1},argTypes:{size:{options:["sm","md","lg","xl"],control:{type:"select"}},state:{options:["normal","error","valid","search"],control:{type:"select"}},type:{options:["text","password"],control:{type:"select"}}}},Sizes={tags:["isHidden"],render:args=>({props:args,template:'\n    <div>\n    <prism-field [size]="\'sm\'" label="small" hint="small" placeholder="small">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'md\'" label="medium" hint="medium" placeholder="medium">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'lg\'" label="large" hint="large" placeholder="large">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'xl\'" label="xl" hint="xl" placeholder="xl">\n    </prism-field>\n    </div>\n  '}),args:{size:"lg"}},InputOnly={tags:["isHidden"],render:args=>({props:args,template:"\n    <div>\n    <prism-field [size]=\"'sm'\" >\n    </prism-field>\n    </div>\n  "}),args:{size:"lg"}},States={tags:["isHidden"],render:args=>({props:args,template:'\n    <div>\n    <prism-field [size]="\'sm\'" label="normal" hint="normal" placeholder="normal">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="valid" hint="valid" placeholder="valid" state="valid">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="error" hint="error" placeholder="error" state="error">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="error" hint="error" placeholder="error" disabled="true">\n    </prism-field>\n    <br>\n    </div>\n  '}),args:{size:"lg"}};Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/file/OPpX0MblTOfOSQFVJwJjCg/Design-System?node-id=2396-617'\n    }\n  },\n  //   decorators: [\n  //     applicationConfig({\n  //         providers: [importProvidersFrom(HttpClientModule)]\n  //     }),\n  //     moduleMetadata({\n  //         declarations: [UI_ATOMS_COMPONENTS],\n  //         imports: [FormsModule, ReactiveFormsModule],\n  //     }),\n  // ],\n  args: {\n    label: 'Label',\n    placeholder: 'Input',\n    isDisabled: false,\n    required: false,\n    allowRevealPassword: false\n  },\n  argTypes: {\n    size: {\n      options: ['sm', 'md', 'lg', 'xl'],\n      control: {\n        type: 'select'\n      }\n    },\n    state: {\n      options: ['normal', 'error', 'valid', 'search'],\n      control: {\n        type: 'select'\n      }\n    },\n    type: {\n      options: ['text', 'password'],\n      control: {\n        type: 'select'\n      }\n    }\n  }\n}",...Primary.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n    <div>\n    <prism-field [size]="\'sm\'" label="small" hint="small" placeholder="small">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'md\'" label="medium" hint="medium" placeholder="medium">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'lg\'" label="large" hint="large" placeholder="large">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'xl\'" label="xl" hint="xl" placeholder="xl">\n    </prism-field>\n    </div>\n  `\n  }),\n  args: {\n    size: "lg"\n  }\n}',...Sizes.parameters?.docs?.source}}},InputOnly.parameters={...InputOnly.parameters,docs:{...InputOnly.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n    <div>\n    <prism-field [size]="\'sm\'" >\n    </prism-field>\n    </div>\n  `\n  }),\n  args: {\n    size: "lg"\n  }\n}',...InputOnly.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n    <div>\n    <prism-field [size]="\'sm\'" label="normal" hint="normal" placeholder="normal">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="valid" hint="valid" placeholder="valid" state="valid">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="error" hint="error" placeholder="error" state="error">\n    </prism-field>\n    <br>\n    <prism-field [size]="\'sm\'" label="error" hint="error" placeholder="error" disabled="true">\n    </prism-field>\n    <br>\n    </div>\n  `\n  }),\n  args: {\n    size: "lg"\n  }\n}',...States.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Sizes","InputOnly","States"]}}]);