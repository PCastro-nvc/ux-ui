"use strict";(self.webpackChunkux_ui=self.webpackChunkux_ui||[]).push([[8451],{"./apps/prism/src/lib/molecules/dropdown/dropdown.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Dropdown:()=>Dropdown,Sizes:()=>Sizes,States:()=>States,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_dropdown_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./apps/prism/src/lib/molecules/dropdown/dropdown.component.ts"),_angular_common_http__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/http.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_atoms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./apps/prism/src/lib/atoms/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Molecules/Dropdown",component:_dropdown_component__WEBPACK_IMPORTED_MODULE_1__.J,decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.applicationConfig)({providers:[(0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.importProvidersFrom)(_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.JF)]}),(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({declarations:[_atoms__WEBPACK_IMPORTED_MODULE_4__.hh]})]},Dropdown={parameters:{design:{type:"figma",url:"https://www.figma.com/design/OPpX0MblTOfOSQFVJwJjCg/Design-System?node-id=2449-2034&t=eFfxFjZwYr1OZl36-0"}},args:{disabled:!1,required:!0,placeholder:"Dropdown",valueAttribute:"value",labelAttribute:"label",label:"label"},argTypes:{size:{options:["sm","md","lg","xl"],control:{type:"select"}},options:{control:"array",defaultValue:[{label:"option 1"},{label:"option 1"}]},state:{options:["normal","error","valid","search"],control:{type:"select"}}}},Sizes={tags:["isHidden"],render:args=>({props:args,template:'\n    <div>\n    <prism-dropdown [size]="\'sm\'" label="small" hint="small" placeholder="small">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'md\'" label="medium" hint="medium" placeholder="medium">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'lg\'" label="large" hint="large" placeholder="large">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'xl\'" label="xl" hint="xl" [required]="false" placeholder="xl">\n    </prism-dropdown>\n    </div>\n  '}),args:{size:"lg"}},States={tags:["isHidden"],render:args=>({props:args,template:'\n    <div>\n    <prism-dropdown [size]="\'sm\'" placeholder="normal">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="valid" state="valid">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="error" state="error">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="disabled" disabled="true">\n    </prism-dropdown>\n    <br>\n    <br>\n    </div>\n  '}),args:{size:"lg"}};Dropdown.parameters={...Dropdown.parameters,docs:{...Dropdown.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    design: {\n      type: 'figma',\n      url: 'https://www.figma.com/design/OPpX0MblTOfOSQFVJwJjCg/Design-System?node-id=2449-2034&t=eFfxFjZwYr1OZl36-0'\n    }\n  },\n  args: {\n    disabled: false,\n    required: true,\n    placeholder: 'Dropdown',\n    valueAttribute: 'value',\n    labelAttribute: 'label',\n    label: \"label\"\n  },\n  argTypes: {\n    size: {\n      options: ['sm', 'md', 'lg', 'xl'],\n      control: {\n        type: 'select'\n      }\n    },\n    options: {\n      control: 'array',\n      defaultValue: [{\n        label: 'option 1'\n      }, {\n        label: 'option 1'\n      }]\n    },\n    state: {\n      options: ['normal', 'error', 'valid', 'search'],\n      control: {\n        type: 'select'\n      }\n    }\n  }\n}",...Dropdown.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n    <div>\n    <prism-dropdown [size]="\'sm\'" label="small" hint="small" placeholder="small">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'md\'" label="medium" hint="medium" placeholder="medium">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'lg\'" label="large" hint="large" placeholder="large">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'xl\'" label="xl" hint="xl" [required]="false" placeholder="xl">\n    </prism-dropdown>\n    </div>\n  `\n  }),\n  args: {\n    size: "lg"\n  }\n}',...Sizes.parameters?.docs?.source}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:'{\n  tags: ["isHidden"],\n  render: args => ({\n    props: args,\n    template: `\n    <div>\n    <prism-dropdown [size]="\'sm\'" placeholder="normal">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="valid" state="valid">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="error" state="error">\n    </prism-dropdown>\n    <br>\n    <br>\n    <prism-dropdown [size]="\'sm\'" placeholder="disabled" disabled="true">\n    </prism-dropdown>\n    <br>\n    <br>\n    </div>\n  `\n  }),\n  args: {\n    size: "lg"\n  }\n}',...States.parameters?.docs?.source}}};const __namedExportsOrder=["Dropdown","Sizes","States"]}}]);